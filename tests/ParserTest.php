<?php

use PHPUnit\Framework\TestCase;
use ThinkReaXMLParser\Objects\FloorplanObject;
use ThinkReaXMLParser\Objects\ImageObject;
use ThinkReaXMLParser\Objects\Listings\ResidentialListing;
use ThinkReaXMLParser\Parser;

class ParserTest extends TestCase
{
    protected $xml;

    public function setUp() : void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->xml = "stubs/residentiallisting_full.xml";
    }

    public function tearDown() : void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function testResidentialListingsParser()
    {
        $listings = Parser::parse($this->xml);

        $this->assertCount(3, $listings);

        $parsed = $listings[0];

        $this->assertSame('residential', $parsed->getType());
        $this->assertSame('ABCD1234', $parsed->getUniqueId());
        $this->assertSame('XNWXNW', $parsed->getAgents()[0]->getAgentID());
        $this->assertSame('Mr. John Doe', $parsed->getAgents()[0]->getName());
        $this->assertInstanceOf(ResidentialListing::class, $parsed);
        $this->assertInstanceOf(ImageObject::class, $parsed->getMedia()->getImages()[0]);
        $this->assertSame('http://www.realestate.com.au/tmp/imageM.jpg', $parsed->getMedia()->getImages()[0]->getUrl());
        $this->assertSame(1, $parsed->getMedia()->getImages()[0]->getOrdering());
        $this->assertFalse($parsed->getIsRental());
        $this->assertCount(2, $parsed->getMedia()->getImages());
        $this->assertInstanceOf(FloorplanObject::class, $parsed->getMedia()->getFloorplans()[0]);
        $this->assertSame('http://www.realestate.com.au/tmp/floorplan1.gif', $parsed->getMedia()->getFloorplans()[0]->getUrl());
        $this->assertCount(2, $parsed->getMedia()->getFloorplans());
        $this->assertSame('current', $parsed->getStatus());
        $this->assertSame('SHOW STOPPER!!!', $parsed->getTitle());
        $this->assertSame('House', $parsed->getCategory());
        $this->assertSame('Yarra', $parsed->getMunicipality());
        $this->assertSame('Yarra', $parsed->getAddress()->getMunicipality());
        $this->assertSame(500000, $parsed->getPrice());
        $this->assertSame("Between $400,000 and $600,000", $parsed->getPriceView());
        $this->assertTrue($parsed->getDisplayPrice());
        $this->assertInstanceOf(\Carbon\Carbon::class, $parsed->getModified());
    }
}
